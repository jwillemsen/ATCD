// -*- MPC -*-
project(CC_CLIENT_GEN) {
  requires += cc_client_gen
  custom_only = 1

  verbatim(gnuace, extension, 1) {
    OUTPUT_DIRECTORY =
  }

  verbatim(gnuace, local) {
BISON_FLAGS := -d --feature=caret --warnings=error=deprecated --warnings=error=conflicts-rr

lex.CC_command.cpp:     CC_command.l CC_command.tab.h
"	@echo 'WARNING: Potentially outdated $@'"
"	@echo '         either touch(1) the file or explicitly'"
"	@echo '         generate it using:'"
"	@echo '    make lex.CC_comand.cpp.target'"

.PHONY: lex.CC_command.cpp.target

lex.CC_command.cpp.target:
"		$(LEX) -P ace_yy -t -olex.CC_command.cpp CC_command.l  | \\"
"		sed -f post_flex.sed lex.CC_command.cpp > lex.CC_command.cpp"

CC_command.tab.cpp CC_command.tab.h: CC_command.y
"	@echo 'WARNING: Potentially outdated CC_command.tab.cpp'"
"	@echo '         either touch(1) the file or explicitly '"
"	@echo '         generate it using:'"
"	@echo '    make CC_comand.tab'"

.PHONY: CC_command.tab

CC_command.tab: CC_command.y
"		$(YACC) $(BISON_FLAGS) -p ace_yy CC_command.y"
"		sed -f post_yacc_cpp.sed CC_command.tab.c > CC_command.tab.cpp"
"		rm CC_command.tab.c"
}
}

project(CC client) : orbsvcsexe, concurrency, naming, svc_utils, iortable, portableserver {
  exename  = CC_client
  after += cc_client_gen
}
